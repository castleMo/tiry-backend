# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  Todos: [Todo!]!
  User: User!
  color: String!
  createdAt: Int!
  id: ID!
  name: String!
  updatedAt: Int!
}

input CreateCategoryInput {
  color: String!
  name: String!
}

input CreateTodoInput {
  categoryId: Int
  contents: String!
  endedAt: DateTime
  isTime: Boolean
  startedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createTodo(createTodoInput: CreateTodoInput!): Todo!
  deleteCategory(categoryId: Float!): Boolean!
  deleteUser: Boolean!
  registerUser(registerUserInput: RegisterUserInput!): User!
  updateCategory(categoryId: Float!, updateCategoryInput: UpdateCategoryInput!): Category!
  updateUser(updateUserInput: UpdateUserInput!, updateUserSettingInput: UpdateUserSettingInput!): User!
}

type Query {
  getCategories: [Category!]!
  getCategory(categoryId: Float!): Category!
  me: User!

  """Returns true if user with given Auth0 token, and false otherwise."""
  verifyUser: Boolean!
}

input RegisterUserInput {
  email: String!
  name: String!
  profileImageUrl: String!
}

enum StartOfWeek {
  MONDAY
  SUNDAY
}

enum Theme {
  DARK
  WHITE
}

type Todo {
  Category: Category!
  allIndex: Int!
  categoryIndex: Int!
  checkedAt: DateTime!
  contents: String!
  createdAt: DateTime!
  id: ID!
  todayIndex: Int!
  updatedAt: DateTime!
}

input UpdateCategoryInput {
  color: String
  name: String
}

input UpdateUserInput {
  motto: String
  nickname: String
}

input UpdateUserSettingInput {
  startOfWeek: StartOfWeek
  theme: Theme
}

type User {
  Categories: [Category!]!
  Todos: [Todo!]!
  UserSetting: UserSetting!
  createdAt: DateTime!
  email: String!
  id: ID!
  motto: String
  name: String!
  nickname: String
  profileImageUrl: String!
  tutorialClearedAt: DateTime
  updatedAt: DateTime!
}

type UserSetting {
  User: User!
  createdAt: DateTime!
  id: ID!
  startOfWeek: StartOfWeek!
  theme: Theme!
  updatedAt: DateTime!
}
