# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TodoPeriod {
  id: ID!

  """시간설정"""
  isTime: Boolean!
  startedAt: DateTime!
  endedAt: DateTime!
  Todo: Todo!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Category {
  id: ID!
  name: String!
  color: String!
  createdAt: Int!
  updatedAt: Int!
  User: User!
  Todos: [Todo!]!
}

type Todo {
  id: ID!
  contents: String!
  allIndex: Int!
  categoryIndex: Int
  checkedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  TodoPeriod: TodoPeriod
  Category: Category
}

type UserSetting {
  id: ID!
  theme: Theme!
  startOfWeek: StartOfWeek!
  createdAt: DateTime!
  updatedAt: DateTime!
  User: User!
}

enum Theme {
  DARK
  WHITE
}

enum StartOfWeek {
  MONDAY
  SUNDAY
}

type User {
  id: ID!
  email: String!
  name: String!
  nickname: String
  motto: String
  profileImageUrl: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  UserSetting: UserSetting!
  Todos: [Todo!]!
  Categories: [Category!]!
}

type Query {
  version: String!
  me: User!

  """Returns true if user with given Auth0 token, and false otherwise."""
  verifyUser: Boolean!
  getTodo(todoId: Float!): Todo!
  getTodos(input: GetTodosInput!): [Todo!]!
  getCategory(categoryId: Float!): Category!
  getCategories: [Category!]!
  testRawQuery: Boolean!
}

input GetTodosInput {
  type: TodoType!
  categoryId: Int
}

enum TodoType {
  ALL
  TODAY
  CATEGORY
}

type Mutation {
  registerUser(input: RegisterUserInput!): User!
  deleteUser: Boolean!
  updateUser(input: UpdateUserInput!): User!
  createTodo(input: CreateTodoInput!): Todo!
  updateTodo(input: UpdateTodoInput!, todoId: Float!): Todo!
  deleteTodo(todoId: Float!): Boolean!
  createCategory(input: CreateCategoryInput!): Category!
  updateCategory(input: UpdateCategoryInput!, categoryId: Float!): Category!
  deleteCategory(categoryId: Int!): Boolean!
}

input RegisterUserInput {
  email: String!
  name: String!
  nickname: String!
  motto: String!
  profileImageUrl: String!
  startOfWeek: StartOfWeek!
}

input UpdateUserInput {
  nickname: String
  motto: String
  userSetting: UpdateUserSettingInput
}

input UpdateUserSettingInput {
  theme: Theme
  startOfWeek: StartOfWeek
}

input CreateTodoInput {
  contents: String!
  categoryId: Int
  isTime: Boolean
  startedAt: DateTime
  endedAt: DateTime
}

input UpdateTodoInput {
  contents: String
  categoryId: Int
  todoPeriodId: Int
  isTime: Boolean
  startedAt: DateTime
  endedAt: DateTime
}

input CreateCategoryInput {
  name: String!
  color: String!
}

input UpdateCategoryInput {
  name: String
  color: String
}
